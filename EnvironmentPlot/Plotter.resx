<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerDataRead.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5rphAPLXnQDirAAA9uCyFvbiuE725L2Y9+fC1Pjp
        yPb4683/+e3S//nu1fT579fQ+vDYk/rw2En679cT/O/dAPnu1AD57pYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw0o8A89mgBvTdqjz14LKc9uK43fbl
        v/j358X/+OrL//js0f/57tb/+vDZ//rx3P768dz3+vHb2vrv2Zb57tY2+e7UBPns0gAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7ch4AO/Piwvy1ptj9Nyo0vXg
        s/3247r/9+bB//jpyP/57M//+e7V//rw2//68t//+/Pi//vz4v/68uD/+vHc/Pnv2Mz57tRb+ezQCfjr
        zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOrAYwDtyXsJ786HZPHV
        mOH03Kr/9eG1//bkvP/358T/+OrL//nt0v/579n/+vLf//v05P/79ej/+/bo//v15v/68+H/+vDb//nu
        1dv57NFb+OvNBvjoxQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6sBkAuzH
        dkzvzYTY8dWZ//TerP/14bb/9+W9//foxv/4683/+e7U//rx3P/79OP/+/bp//z47v/8+O7//Pfr//v1
        5f/68t7/+e/X//ns0dH468xC+OjFAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOW2
        TgDpv2Ma68Vwr+7Mg/3y1pz/9d6t//bit//35b7/9+jG//jrzv/57tb/+vLd//v15f/89+z//frz//36
        9P/8+O//+/bo//ry4P/58Nn/+ezR/Pjqy6T46McU9+S9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA5LdOAei9X1nrw23t7syD//LXnP/13q7/9uK3//flv//36Mf/+evP//nv1//68t//+/Xm//z4
        7v/9+/b//fz3//z58f/79un/+/Ph//rw2f/57NH/+OrK5/foxk33470BAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADmt08O57xal+rCa/3uzIP/8tab//Xerf/24rf/9+W+//foxv/4687/+e7W//ry
        3v/79Ob//Pjt//368//9+/T//Pnv//v26P/78+H/+vDZ//ns0f/36cn89+fEi/fmwAkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOW1SyHnulXA6sFp/+7Lgf/x1Zn/9N2s//Xhtv/25L3/9+jF//jr
        zf/57tX/+vHc//v04//79un//Pju//z47//89+v/+/Xm//ry3//579j/+ezQ//jpyP/358K19+W/GgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5bNGMOa4UtPpwGb/7cp+//HUlv/03ar/9eG1//bk
        vP/358T/+OrL//nt0v/68Nn/+vLg//v05f/79un/+/bp//v15//78+L/+vHc//nu1f/4687/9+jH//fm
        wMn25L0nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADksUM05rZN1um/Yv/syHn/8NKR//Tb
        pv/14LP/9uO6//fmwf/46cj/+OvP//nu1f/68dv/+vLg//vz4//79OP/+vPh//rx3f/579j/+e3S//jq
        y//358T/9+W+zfbjuyoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOSwQCbltUrH6L1d/+zG
        dP/v0Iv/89mh//XfsP/24rj/9+W+//foxf/46sz/+e3R//nv1//68Nr/+vHd//rx3f/68dz/+u/Y//nu
        1P/568//+OnI//fmwv/25LzA9uO5IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5K8+EeWz
        RqHnulf+6sNt/+7NhP/x1pr/9N2s//XhtP/247v/9+bB//fox//4683/+e3R//nu1f/579b/+e/X//nu
        1v/57dP/+OzO//jpyv/358T/9uW+/vbjupz24rcPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADirjoC5LJEZea3UfLqwGb/7cl8//DSkf/02qT/9d+x//biuP/25L3/9+fD//jpyP/46sz/+OzP//ns
        0f/57NH/+OzQ//jrzv/46cr/+OjF//flwP/247ry9uK3ZfbitQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOKvOgDkskIl5rZMw+i8Xf/rxnP/78+K//PZof/13q3/9eCz//biuf/35b7/9+bC//jo
        xv/46cn/+OrK//jpy//46sr/+OnI//fnxP/35sD/9uS7//bit8n14bUo9uK1AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOKwPQXltElx57lV8evFcv/x3av/9OfD//XlvP/14bT/9eG1//bj
        uf/25L3/9+bB//fnw//358T/9+fF//fnxP/35sL/9+W///bku//24rf19eG1fPXgswcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5LVNAOWzRyHmtk2z6sVw/vTqyv/39eP/9/Lb//br
        zf/258L/9uS7//biuP/247v/9uS9//flvv/35b7/9+W+//bkvP/247n/9uG2//Xgs8L14LIs9OW6AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgqSgA5LFCA+W0SlPnu1nk79ec//j4
        6v/4+Ov/9vHZ//bt0f/26cb/9uK3//Xhtf/24rf/9uK4//bjuf/24rj/9uK2//XhtP/137Hv9d6vZ/Xf
        rwX13rEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADlskMA5bRHDuW1
        TI3qx3b39vLd//f36f/28dr/9u7T//bqyv/14bX/9d6u//Xfsf/14LL/9eCy//Xgsv/137D/9d6t/PTd
        q6j03asY9d+wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADlvF8A5bNGLue8XMHx4LH/9/jp//f04v/279f/9ejF//Pbpv/z2aH/9Num//Tcqf/03ar/9Nyo//Pa
        pf/z2aHX8tmgRfLYmwH13qQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOWrLQDksD8D5LNGWOjAZebw3Kn/9e7T//Xszv/x3an/79CM//DRkP/x05X/8dWY//LV
        mf/x1Jf/8dOU8/HTk3nx05QK89qiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOWyRADjsUAQ5LJFkua5Vvjqx3f/7MyD/+zHd//sx3f/7cp+/+7M
        g//uzYX/782G/+7NhP7uzYS17s2HIfLWmwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOi5VADjrzwu5LA/weWzR/7muFP/6Lxd/+nA
        Zf/qwmz/68Rw/+vFc//rxnP/7MZz3ezHdU3pxHMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4rA9AOGqNATirDZf46466uSx
        Q//mtkz/57lU/+e7Wv/ovV7/6b5g/+m+Yfjpv2SH6sFoDu3LgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4qw2AOCo
        KxPhqC2d4aoy++OuOv/ksUH/5bNH/+W1Sv/mtk3+5rdQwue5VCnt0IkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA35wNAN+jIT/fpCLV4Kco/+GqL//irDX/4q05/+OuPOvjsEBj5bJGA+m+YwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADgpSMA3Z4UCt2eFIDdnxf33qEd/9+kIv/gpSX94KcqpOGpLxjltEoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADeoRsA25oILtuZCMzbmgz/3J0Q/92eFOLeoBlK4KMfAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZlwIG2pkIe9uZCPXbmQf725kHltuZ
        CA7hpiYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANqYBADdnxYz3Z8X0d2e
        FNzcnA5D0YYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOCm
        JgvfpieK36Ylkd+jIA/XkwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4q42AeKsNTzirDQ84akvAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//AP///AA///gAH//wAA//4AAH/8AAA//AAAP/gAAB/4AAAf+AAAH/gA
        AB/4AAAf+AAAH/wAAD/8AAA//gAAf/4AAH//AAD//wAA//+AAf//wAP//8AD///gB///8Af///AP///4
        H///+B////w////+P////n////5///////8=
</value>
  </data>
</root>